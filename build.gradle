buildscript {
    ext.kotlin_version = '1.3.20'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'hashcode'

apply plugin: 'kotlin'
apply plugin: 'application'

mainClassName = 'MainKt'
sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "http://repository.jetbrains.com/all"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    
}

jar {
    manifest {
        attributes(
                //'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.github.jacklt.hashcode.MainKt'
        )
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

// using this task to zip the source code:  gradle -q srcZip
task srcZip(type: Zip) {
    classifier = 'src'
    from(projectDir) {
    include 'src/**/*'
        exclude 'build/**/*'
    exclude('*/*.iml')
        exclude('*/*.in')
        exclude('*/*.out')
        exclude('*/*.jar')
    include '*.gradle'
    exclude 'README.md'

    }
    destinationDir project.rootDir
    doLast {
        println "Path to zip: $archivePath.path"
    }
}

